[
    {
      "type": "h4",
      "text": "What is a Hash Table?"
    },
    {
      "type": "p5",
      "text": "A hash table is like a smart locker system where each item is stored in a locker using a unique code, called a 'key'. Instead of searching one-by-one, the locker number is calculated using a special function known as a 'hash function'."
    },
    {
      "type": "ul",
      "text": [
        "It stores data in key-value pairs.",
        "The key is passed through a hash function to determine the index in the table.",
        "It allows fast access, insertion, and deletion."
      ]
    },
    {
      "type": "h5",
      "text": "How Does a Hash Table Work?"
    },
    {
      "type": "ol",
      "text": [
        "A hash function converts the key into an index (a number).",
        "The value is stored at that index in an array-like structure.",
        "When retrieving, the same hash function is used to locate the value instantly."
      ]
    },
    {
      "type": "code",
      "text": {
        "lang": "pseudo",
        "code": "function insert(key, value):\n  index = hashFunction(key)\n  table[index] = value\n\nfunction get(key):\n  index = hashFunction(key)\n  return table[index]"
      }
    },
    {
      "type": "h5",
      "text": "Advantages of Hash Tables"
    },
    {
      "type": "ul",
      "text": [
        "Extremely fast data access — on average O(1) time for search, insert, and delete.",
        "Efficient for lookups when you have unique keys (like usernames or IDs).",
        "Dynamic resizing — modern hash tables can grow or shrink based on usage.",
        "Perfect for building caches, databases, and symbol tables in compilers."
      ]
    },
    {
        "type": "h5",
        "text": "Common Uses in Programming"
      },
      {
        "type": "ul",
        "text": [
          "Implementing associative arrays or dictionaries (e.g., `map` in C++, `dict` in Python).",
          "Checking for duplicates in a list using a set.",
          "Counting occurrences of elements (like counting word frequency).",
          "Creating caches for fast data retrieval (e.g., memoization in dynamic programming).",
          "Symbol tables in interpreters and compilers.",
          "Storing routing information in networks (like IP lookup tables)."
        ]
      },
      {
        "type": "p5",
        "text": "In real-world applications, hash tables are everywhere — from autocomplete suggestions to storing configuration settings in large systems."
      }
  ]
  
